<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Notes_App.UI_Code">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <local:RandomColorConverter x:Key="RandomColorConverter" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver, Converter={StaticResource RandomColorConverter}}" />
        <Setter Property="Foreground" Value="#414141" />
        <!-- Default font color -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="MainBorder"
                            Background="#EEEEEE"
                            CornerRadius="10">
                            <!-- Overlay Border with ContentPresenter to display content -->
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                TextBlock.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver, Converter={StaticResource RandomColorConverter}}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover Trigger with Smooth Animation -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- Use the custom converter to generate random colors -->
                            <Setter TargetName="MainBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver, Converter={StaticResource RandomColorConverter}}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MainBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                            To="-5"
                                            Duration="0:0:0.1" />
                                        <!-- Animation duration of 0.1 seconds -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MainBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                            To="0"
                                            Duration="0:0:0.1" />
                                        <!-- Reverse the animation to move back to the original position -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Click Trigger with Scale Animation -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                    <!-- Scale down the button when clicked -->
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

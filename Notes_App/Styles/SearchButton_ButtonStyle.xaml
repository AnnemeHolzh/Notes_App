<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Notes_App.UI_Code">
    <local:RandomColorConverter x:Key="RandomColorConverter" />

    <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#414141" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                    x:Name="MainBorder"
                    Background="{TemplateBinding Background}"
                    CornerRadius="20"
                    Padding="10">
                        <ContentPresenter
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Content}" />
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                        </Border.RenderTransform>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverAnimation">
                            <DoubleAnimation
                            Storyboard.TargetName="MainBorder"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                            To="0.95"
                            Duration="0:0:0.1" />
                            <DoubleAnimation
                            Storyboard.TargetName="MainBorder"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                            To="0.95"
                            Duration="0:0:0.1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverAnimationReverse">
                            <DoubleAnimation
                            Storyboard.TargetName="MainBorder"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                            To="1.0"
                            Duration="0:0:0.1" />
                            <DoubleAnimation
                            Storyboard.TargetName="MainBorder"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                            To="1.0"
                            Duration="0:0:0.1" />
                        </Storyboard>
                        <Storyboard x:Key="ClickAnimation">
                            <DoubleAnimation
                            Storyboard.TargetName="MainBorder"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                            To="0.9"
                            Duration="0:0:0.1" />
                            <DoubleAnimation
                            Storyboard.TargetName="MainBorder"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                            To="0.9"
                            Duration="0:0:0.1" />
                        </Storyboard>
                        <Storyboard x:Key="ExitHoverAnimation">
                            <DoubleAnimation
                            Storyboard.TargetName="MainBorder"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                            To="1.0"
                            Duration="0:0:0.1" />
                            <DoubleAnimation
                            Storyboard.TargetName="MainBorder"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                            To="1.0"
                            Duration="0:0:0.1" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <!-- Hover Trigger with Smooth Animation -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver, Converter={StaticResource RandomColorConverter}}" />
                            <Setter TargetName="MainBorder" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver, Converter={StaticResource RandomColorConverter}}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverAnimation}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitHoverAnimation}" />
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Click Trigger -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="#A0A0A0" />
                            <!-- Change the background color when clicked/pressed -->
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ClickAnimation}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitHoverAnimation}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>